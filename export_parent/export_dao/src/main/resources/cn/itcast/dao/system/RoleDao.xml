<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.dao.system.RoleDao">
    <resultMap id="BaseResultMap" type="cn.itcast.domain.system.Role">
        <id column="role_id" property="id"/>
        <result column="name" property="name"/>
        <result column="remark" property="remark"/>
        <result column="order_no" property="orderNo"/>
        <result column="company_id" property="companyId"/>
        <result column="company_name" property="companyName"/>
    </resultMap>

    <!--查询全部-->
    <select id="findAll" resultMap="BaseResultMap">
        select * from pe_role where company_id=#{companyId}
    </select>

    <!--根据id查询-->
    <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from pe_role where role_id = #{id}
    </select>

    <!--根据用户id查询用户的所有角色day05-->
    <select id="findUserRole" resultMap="BaseResultMap">
          SELECT r.* FROM pe_role r, pe_role_user ru WHERE r.role_id = ru.role_id AND ru.user_id=#{userId}
    </select>

    <!--删除-->
    <delete id="delete">
        delete from pe_role where role_id = #{id}
    </delete>

    <!--保存-->
    <insert id="save">
        insert into pe_role (role_id, name, remark, order_no,company_id, company_name)
        values (#{id}, #{name}, #{remark}, #{orderNo}, #{companyId}, #{companyName})
    </insert>

    <!--更新-->
    <update id="update">
        update pe_role
        set name = #{name},
          remark = #{remark},
          order_no = #{orderNo}
        where role_id = #{id}
    </update>

    <delete id="deleteRoleModuleByRoleId">
        DELETE FROM pe_role_module WHERE role_id=#{roleId}
    </delete>

    <!--接口方法：void saveRoleModule(String roleId, String moduleId);-->
    <!--
        注意：接口方法参数有多个，占位符参数不能随便写。
        方式1：把多个参数封装为对象
        方式2：在接口方法参数上使用@Param注解
           接口：void saveRoleModule(
                    @Param("roleId") String roleId,
                    @Param("moduleId") String moduleId);
           映射：
                    #{roleId} 中的"roleId"对应方法参数中@Param指定的名称。
        方式3：#{arg0} 表示方法形参的第一个参数
            接口：void saveRoleModule(String roleId, String moduleId);
            映射：
                INSERT INTO pe_role_module(role_id,module_id)VALUES(#{arg0},#{arg1});
    -->
    <insert id="saveRoleModule">
        INSERT INTO pe_role_module(role_id,module_id)VALUES(#{roleId},#{moduleId});
    </insert>
</mapper>