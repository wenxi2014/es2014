<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--1 配置过滤器工厂-->
<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <!--1.1 注入securityManager，shiro的核心对象-->
    <property name="securityManager" ref="securityManager"/>
    <!--1.2 认证失败后，自动跳转到的页面地址-->
    <property name="loginUrl" value="/login.jsp"/>
    <!--1.3 认证成功后，自动跳转的页面. 如果登陆成功程序有指定跳转页面,以程序指定的为主. -->
    <property name="successUrl" value="/index.jsp"/>
    <!--1.4 未授权页面. 授权校验失败，自动跳转的页面．-->
    <property name="unauthorizedUrl" value="/unauthorized.jsp"/>

    <!--1.5 配置过滤器放行的资源,拦截的资源,需要授权校验的资源-->
     <property name="filterChainDefinitions">
         <value>
             /login.jsp* = anon
             /index.jsp* = anon
             /login* = anon
             /logout* = anon
             /css/** = anon
             /img/** = anon
             /make/** = anon
             /plugins/** = anon
             <!--访问用户列表,必须具有用户管理的权限
             /system/user/list.do = perms["用户管理"]-->
             /** = authc
         </value>
     </property>
</bean>

    <!--2 创建SecurityManager对象-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="authRealm"></property>
    </bean>

    <!--3. 配置自定义Realm域 -->
    <bean id="authRealm" class="cn.itcast.controller.shiro.AuthRealm">
        <!-- 注入凭证匹配器-->
        <property name="credentialsMatcher" ref="credentialsMatcher"></property>
    </bean>

    <!--4. 自定义凭证匹配器. 对用户输入的密码加密加盐. 把邮箱作为盐-->
    <bean id="credentialsMatcher"
          class="cn.itcast.controller.shiro.CustomCredentialsMatcher"/>

    <!--5. 开启shiro权限校验注解支持-->
    <!--depends-on 表示创建当前对象之前,先创建depends-on关联的对象-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>
